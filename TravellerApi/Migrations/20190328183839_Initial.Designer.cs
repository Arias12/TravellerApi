// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravellerApi.Model;

namespace TravellerApi.Migrations
{
    [DbContext(typeof(TravellerDbContext))]
    [Migration("20190328183839_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TravellerApi.Model.City", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CountryId");

                    b.Property<string>("Name");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("TravellerApi.Model.Comment", b =>
                {
                    b.Property<Guid>("CommentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<Guid?>("InterestingPlaceId");

                    b.Property<decimal>("Rating");

                    b.HasKey("CommentId");

                    b.HasIndex("InterestingPlaceId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("TravellerApi.Model.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Population");

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("TravellerApi.Model.InterestingPlace", b =>
                {
                    b.Property<Guid>("InterestingPlaceId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CityId");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("InterestingPlaceId");

                    b.HasIndex("CityId");

                    b.ToTable("InterestingPlace");
                });

            modelBuilder.Entity("TravellerApi.Model.City", b =>
                {
                    b.HasOne("TravellerApi.Model.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("TravellerApi.Model.Comment", b =>
                {
                    b.HasOne("TravellerApi.Model.InterestingPlace", "InterestingPlace")
                        .WithMany("Comments")
                        .HasForeignKey("InterestingPlaceId");
                });

            modelBuilder.Entity("TravellerApi.Model.InterestingPlace", b =>
                {
                    b.HasOne("TravellerApi.Model.City", "City")
                        .WithMany("InterestingPlaces")
                        .HasForeignKey("CityId");
                });
#pragma warning restore 612, 618
        }
    }
}
